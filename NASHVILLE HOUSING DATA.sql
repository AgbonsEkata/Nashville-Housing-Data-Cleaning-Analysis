-- STANDARDIZE SALE_DATE DATE FORMAT
SELECT SALEDATE, CAST(SALEDATE AS DATE)
FROM HOUSING;

UPDATE HOUSING
SET SALEDATE = CAST(SALEDATE AS DATE);

--POPULATE PROPERTY ADDRESS DATA. 
--WE WILL FILL ALL NULL ADDRESSES WITH THE ADDRESS FROM THEIR CORRESPOBDING PARCEL ID
-- FIRSTLY WE WILL DO A SELF JOIN 
SELECT A.PARCELID, A.PROPERTYADDRESS, B.PARCELID, B.PROPERTYADDRESS, COALESCE(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM HOUSING A
JOIN HOUSING B
ON A.PARCELID = B.PARCELID
AND A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL;

--NOW LET US UPDATE OUR NULL VALES
UPDATE HOUSING 
SET PROPERTYADDRESS = COALESCE(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM HOUSING A
JOIN HOUSING B
	ON A.PARCELID = B.PARCELID
	AND A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL;


-- BREAKING OUT PROPERTYADDRESS INTO MULTIPLE COLUMNS
SELECT PROPERTYADDRESS,
		SUBSTRING(PROPERTYADDRESS, 1, POSITION(',' IN PROPERTYADDRESS) -1) AS ADDRESS,
		SUBSTRING(PROPERTYADDRESS, POSITION(',' IN PROPERTYADDRESS) +1, LENGTH(PROPERTYADDRESS)) AS CITY
FROM HOUSING

--CREATE NEW COLUMNS FOR THE CLEANED DATA
ALTER TABLE HOUSING
ADD COLUMN ADDRESS VARCHAR(255);

UPDATE HOUSING
SET ADDRESS = SUBSTRING(PROPERTYADDRESS, 1, POSITION(',' IN PROPERTYADDRESS) -1)

ALTER TABLE HOUSING
ADD COLUMN CITY VARCHAR(255);

UPDATE HOUSING
SET CITY = SUBSTRING(PROPERTYADDRESS, POSITION(',' IN PROPERTYADDRESS) +1, LENGTH(PROPERTYADDRESS))





-- BREAKING OUT OWNERADDRESS INTO MULTIPLE COLUMNS USING SPLIT_PART
SELECT 
    SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 1) AS OWNERSADDRESSNAME, --SPLIT_PART ONLY WORKS WITH PERIODS, SO WE REPLACE THE COMMAS WITH PERIODS
    SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 2) AS OWNERSCITYNAME,
    SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 3) AS OWNERSSTATEINITIALS
FROM HOUSING
WHERE OWNERADDRESS IS NOT NULL;

--CREATE NEW COLUMNS FOR THE CLEANED DATA
ALTER TABLE HOUSING
Add OWNERSADDRESSNAME VARCHAR(255);

Update HOUSING
SET OWNERSADDRESSNAME = SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 1)


ALTER TABLE HOUSING
Add OWNERSCITYNAME VARCHAR(255);

Update HOUSING
SET OWNERSCITYNAME = SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 2)

ALTER TABLE HOUSING
Add OWNERSSTATEINITIALS VARCHAR(255);

Update HOUSING
SET OWNERSSTATEINITIALS = SPLIT_PART(REPLACE(OWNERADDRESS, ',', '.'), '.', 3)



-- Change Y and N to Yes and No in "Sold as Vacant" field
--WE HAVE COLUMNS WITH 'Y', 'YES', 'N', AND 'NO'

-- WE WILL USE A CASE STATEMENT
SELECT SOLDASVACANT,
		CASE WHEN SOLDASVACANT = 'Y' THEN 'Yes'
		WHEN SOLDASVACANT = 'N' THEN 'No'
		ELSE SOLDASVACANT
		END
FROM HOUSING;

--UPDATE THE HOUSING TABLE
UPDATE HOUSING
SET SOLDASVACANT = CASE WHEN SOLDASVACANT = 'Y' THEN 'Yes'
		WHEN SOLDASVACANT = 'N' THEN 'No'
		ELSE SOLDASVACANT
		END


-- REMOVE DUPLICATES
WITH ROWNUMBCTE AS (
    SELECT *,
        ROW_NUMBER() OVER(
            PARTITION BY PARCELID,
                PROPERTYADDRESS,
                SALEPRICE,
                SALEDATE,
                LEGALREFERENCE
            ORDER BY UNIQUEID
        ) AS ROWNUM
    FROM HOUSING
),
CLEAN_HOUSING AS (
    SELECT *
    FROM ROWNUMBCTE 
    WHERE ROWNUM = 1
)
SELECT *
--INTO HOUSING_TEMP
FROM CLEAN_HOUSING;



ALTER TABLE HOUSING_TEMP
DROP COLUMN OWNERADDRESS,
			TAXDISTRICT,
			PROPERTYADDRESS,
			SALEDATE




